(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24605,        654]
NotebookOptionsPosition[     21799,        598]
NotebookOutlinePosition[     22318,        617]
CellTagsIndexPosition[     22275,        614]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"CurrentValue", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", "DefaultNaturalLanguage"}],
    "]"}], "=", "\"\<English\>\""}]], "Input",
 CellChangeTimes->{{3.956073509830599*^9, 
  3.9560735192476788`*^9}},ExpressionUUID->"a4f1d0bf-bbf8-478c-af08-\
111d971a2bbe"],

Cell[CellGroupData[{

Cell["Necessary programs for working with automata", "Subsection",
 CellChangeTimes->{{3.956072627030163*^9, 3.956072644294786*^9}, {
  3.95607269896006*^9, 3.956072718686141*^9}, {3.9560734997954597`*^9, 
  3.956073507297175*^9}},ExpressionUUID->"f3117d03-13f2-4fe5-b0dd-\
21cd18c3d1e5"],

Cell[CellGroupData[{

Cell["\<\
The following program outputs the kind of the given automaton (Deterministic \
// Non - Deterministic // Lambda)\
\>", "Subsubsection",
 CellChangeTimes->{{3.956072720614491*^9, 3.9560727778418703`*^9}, {
   3.9560731706867*^9, 3.956073231956893*^9}, {3.9560733742526693`*^9, 
   3.9560733901550426`*^9}, 
   3.9560737393110657`*^9},ExpressionUUID->"5e2372e2-d6d6-4701-b21f-\
e51985b1bf63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KoA", "[", "A_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transitions", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "transnolambda", ",", "i", ",",
       "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"transnolambda", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"transitions", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=!=", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "transitions", "]"}], ">", 
        RowBox[{"Length", "[", "transnolambda", "]"}]}], ",", 
       RowBox[{"Return", " ", "[", "\"\<Lambda-Automaton\>\"", "]"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{
         RowBox[{"Length", "[", "transnolambda", "]"}], "-", "1"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"i", "+", "1"}]}], ",", 
          RowBox[{"j", "<=", 
           RowBox[{"Length", "[", "transnolambda", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"transnolambda", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", 
              RowBox[{"transnolambda", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "&&", 
             RowBox[{
              RowBox[{"transnolambda", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "==", 
              RowBox[{"transnolambda", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}]}]}], ",", 
            RowBox[{
            "Return", "[", "\"\<Non-Deterministic Automaton\>\"", "]"}]}], 
           "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\"\<Deterministic Automaton\>\"", "]"}], ";"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.956072838301998*^9, 3.956072957402391*^9}, {
  3.9560730424432697`*^9, 3.956073061102536*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0dc7cdff-f574-4fa3-b42f-05fa544c5a7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A for more useful program is the one presented below < IsDeterministic > \
since it' ll be used in later programs that require a DFA . If true, the \
given automaton is Deterministic and hopefully the program can continue with \
its execution. If not, a different Deterministic Automaton must be introduced.\
\>", "Subsubsection",
 CellChangeTimes->{{3.9560738740426397`*^9, 
  3.956073993855732*^9}},ExpressionUUID->"b33210ff-609b-4c39-8665-\
8f06354d0c55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsDeterministic", "[", "A_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transitions", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "transnolambda", ",", "i", ",",
       "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"transnolambda", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"transitions", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=!=", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "transitions", "]"}], ">", 
        RowBox[{"Length", "[", "transnolambda", "]"}]}], ",", 
       RowBox[{"Return", " ", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{
         RowBox[{"Length", "[", "transnolambda", "]"}], "-", "1"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", 
          RowBox[{"i", "+", "1"}]}], ",", 
         RowBox[{"j", "<=", 
          RowBox[{"Length", "[", "transnolambda", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"transnolambda", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", 
             RowBox[{"transnolambda", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"transnolambda", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "==", 
             RowBox[{"transnolambda", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"Return", "[", "False", "]"}]}], " ", "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.95607401963386*^9, 3.956074054008256*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9cb624c1-8cb7-48f7-928f-d2ec35314f1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The following program determines whether the given automaton is a completely \
specified one or not . A completely specified automaton is the one that, for \
each state and each symbol, there\[CloseCurlyQuote]s only one possible \
transition (we assume that we\[CloseCurlyQuote]re working with a DFA or \
Deterministic Finite Automaton then)\
\>", "Subsubsection",
 CellChangeTimes->{{3.956073564220414*^9, 3.956073750466341*^9}, {
  3.956074115921474*^9, 3.9560741168442698`*^9}, {3.9560747201570587`*^9, 
  3.956074735941902*^9}},ExpressionUUID->"df3d70df-bf5f-487e-8ba6-\
2af1ca3cd0dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CompleSpecified", "[", "A_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"A", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"alphabet", " ", "=", " ", 
       RowBox[{"A", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"transitions", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "i", ",", "j"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"IsDeterministic", "[", "A", "]"}], "]"}], ",", 
       RowBox[{"Return", "[", "\"\<It's not Deterministic\>\"", "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "states", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<=", 
           RowBox[{"Length", "[", "alphabet", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"transitions", ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"states", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "&&", " ", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"alphabet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], " ", "&"}]}], "]"}], 
               "]"}], "!=", "1"}], ",", 
             RowBox[{"Return", " ", "[", "False", "]"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "True", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.956073754085476*^9, 3.956073858675947*^9}, {
  3.956074149874406*^9, 3.956074203459942*^9}, {3.956074746660359*^9, 
  3.956074747499329*^9}, {3.956074810043954*^9, 3.956074832038766*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"59a26c5c-732d-41c2-a63a-d48a5b4c2881"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The next function is paramount for future algorithms . It' s the one that \
determines whether a string is accepted by a DFA or not .\
\>", "Subsubsection",
 CellChangeTimes->{{3.956248194528572*^9, 3.956248307718088*^9}, {
  3.95624837760174*^9, 
  3.956248383838168*^9}},ExpressionUUID->"be5fa517-e35c-498f-a0ad-\
366e4650fb7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringAcceptDFA", "[", 
   RowBox[{"A_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transitions", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{"alphabet", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"InitialE", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", 
      RowBox[{"FinalE", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ",", "possibleTrans", ",", "i"}], 
     "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"IsDeterministic", "[", "A", "]"}], "]"}], ",", 
       RowBox[{"Return", "[", "\"\<It's not deterministic\>\"", "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"SubsetQ", "[", 
         RowBox[{"alphabet", ",", 
          RowBox[{"Union", "[", "x", "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"Return", "[", "\"\<The alphabets don't match\>\"", "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", " ", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "x", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"possibleTrans", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"transitions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "==", "InitialE"}], " ", "&&",
               " ", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "==", 
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"Print", "[", "possibleTrans", "]"}], ";"}], 
        RowBox[{"(*", 
         RowBox[{
         "Useful", " ", "to", " ", "see", " ", "a", " ", "trace", " ", "of", 
          " ", "the", " ", "execution"}], "*)"}], ";", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "possibleTrans", "]"}], "==", "0"}], ",", 
          RowBox[{"Return", " ", "[", "False", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"InitialE", "=", 
         RowBox[{"possibleTrans", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"FinalE", ",", "InitialE"}], "]"}], ",", 
       RowBox[{"Return", "[", "True", "]"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.956248323024457*^9, 3.9562484910193787`*^9}, {
  3.956248524744426*^9, 3.956248538795169*^9}, {3.956250329291971*^9, 
  3.9562503295696697`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"443297c6-dabd-4a06-985a-15a1ec838bc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Next up, we' ve got a function that' s fundamental for the implementation of \
the StringAccept version for NFA . For this program the input is an \
automaton, a set of states and a symbol . It' ll be much clearer in the \
StringAcceptNFA routine.\
\>", "Subsubsection",
 CellChangeTimes->{{3.9562498962586813`*^9, 
  3.956250014495113*^9}},ExpressionUUID->"be64ba5a-b08a-4a4e-9a33-\
465fb9d44c28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aux", "[", 
   RowBox[{"A_", ",", "Conj_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transitions", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "tr"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tr", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"tr", ",", 
       RowBox[{"Select", "[", 
        RowBox[{"transitions", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"Conj", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&&", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "s"}]}], "&"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tr", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"tr", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Union", "[", 
       RowBox[{"tr", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.956250026124908*^9, 3.956250057876292*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"18930dc0-4f1b-4b04-9ddb-a1de1a3f205a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Finally, we present the function that determines whether a string is accepted \
by a Non - Deterministic Finite Automaton or not.\
\>", "Subsubsection",
 CellChangeTimes->{{3.956250208782076*^9, 
  3.95625031045543*^9}},ExpressionUUID->"5c4d2282-975a-4a7b-8033-\
b808ba60ce21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringAcceptNFA", "[", 
   RowBox[{"A_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Conj", "=", 
       RowBox[{"{", 
        RowBox[{"A", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "}"}]}], ",", " ", 
      RowBox[{"FinalE", "=", 
       RowBox[{"A", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", 
         RowBox[{"Length", "[", "x", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Print", "[", "Conj", "]"}], ";"}], 
         RowBox[{"(*", 
          RowBox[{
          "Useful", " ", "to", " ", "see", " ", "a", " ", "trace", " ", "of", 
           " ", "the", " ", "execution"}], "*)"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "Conj", "]"}], "==", "0"}], ",", 
           RowBox[{"Return", " ", "[", "False", "]"}]}], "]"}], ";", 
         RowBox[{"Conj", " ", "=", " ", 
          RowBox[{"Aux", "[", 
           RowBox[{"A", ",", "Conj", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "Conj", "]"}], ";"}], 
     RowBox[{"(*", 
      RowBox[{
      "Prints", " ", "the", " ", "final", " ", "state", " ", "after", " ", 
       "processing", " ", "the", " ", "whole", " ", "string"}], "*)"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"SubsetQ", "[", 
        RowBox[{"FinalE", ",", "Conj"}], "]"}], ",", 
       RowBox[{"Return", " ", "[", "True", "]"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.956250336054167*^9, 3.9562503675149107`*^9}, {
  3.956250398556616*^9, 
  3.956250517157042*^9}},ExpressionUUID->"35f9e1d3-edf6-48dc-94e4-\
81fa5ebd53c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringAcceptNFA", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "a", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "a", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "b", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "a", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "a", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "b", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "a", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "b", ",", "3"}], "}"}]}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "b", ",", "a", ",", "b"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9562503834191723`*^9, 3.956250390823861*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"17344b2f-15ba-473c-8045-2cbb0518470a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Print",
 CellChangeTimes->{3.956250432384839*^9, 3.9562504759209213`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[20]:=",ExpressionUUID->"93056ffe-7ac7-4a08-ab75-fb2a71885210"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{3.956250432384839*^9, 3.956250475922948*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[20]:=",ExpressionUUID->"7fcc9ddb-6547-4a66-b397-5e69dc5ed423"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Print",
 CellChangeTimes->{3.956250432384839*^9, 3.956250475924947*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[20]:=",ExpressionUUID->"906297bb-9d1d-4e64-aad4-207a7a7a17ee"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Print",
 CellChangeTimes->{3.956250432384839*^9, 3.9562504759266987`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[20]:=",ExpressionUUID->"7534bb13-8345-4c64-a961-987a35d3d565"],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Print",
 CellChangeTimes->{3.956250432384839*^9, 3.956250475928389*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[20]:=",ExpressionUUID->"0663499f-cd47-483f-a756-47dd2ac35458"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Print",
 CellChangeTimes->{3.956250432384839*^9, 3.9562504759303083`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[20]:=",ExpressionUUID->"be9f2183-f24f-46a7-8cbc-1aee7130efa5"]
}, Open  ]],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.9562503915365753`*^9, 3.956250432392445*^9}, 
   3.956250475932122*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d1b9f619-922b-4654-98bc-40e75f3e406a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{756, 862},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DefaultNaturalLanguage->"English",
SpellingDictionaries->{"CorrectWords"->{
 "program", "The", "following", "Necessary"}},
FrontEndVersion->"13.2 para Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0b2d408b-f46c-4bd5-b89b-2d95adc112a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 321, 8, 44, "Input",ExpressionUUID->"a4f1d0bf-bbf8-478c-af08-111d971a2bbe"],
Cell[CellGroupData[{
Cell[904, 32, 288, 4, 54, "Subsection",ExpressionUUID->"f3117d03-13f2-4fe5-b0dd-21cd18c3d1e5"],
Cell[CellGroupData[{
Cell[1217, 40, 400, 8, 71, "Subsubsection",ExpressionUUID->"5e2372e2-d6d6-4701-b21f-e51985b1bf63"],
Cell[1620, 50, 2672, 68, 361, "Input",ExpressionUUID->"0dc7cdff-f574-4fa3-b42f-05fa544c5a7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4329, 123, 468, 8, 123, "Subsubsection",ExpressionUUID->"b33210ff-609b-4c39-8665-8f06354d0c55"],
Cell[4800, 133, 2494, 64, 340, "Input",ExpressionUUID->"9cb624c1-8cb7-48f7-928f-d2ec35314f1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7331, 202, 599, 10, 123, "Subsubsection",ExpressionUUID->"df3d70df-bf5f-487e-8ba6-2af1ca3cd0dc"],
Cell[7933, 214, 2670, 65, 367, "Input",ExpressionUUID->"59a26c5c-732d-41c2-a63a-d48a5b4c2881"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10640, 284, 340, 7, 71, "Subsubsection",ExpressionUUID->"be5fa517-e35c-498f-a0ad-366e4650fb7f"],
Cell[10983, 293, 3400, 86, 424, "Input",ExpressionUUID->"443297c6-dabd-4a06-985a-15a1ec838bc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14420, 384, 408, 8, 97, "Subsubsection",ExpressionUUID->"be64ba5a-b08a-4a4e-9a33-465fb9d44c28"],
Cell[14831, 394, 1422, 39, 196, "Input",ExpressionUUID->"18930dc0-4f1b-4b04-9ddb-a1de1a3f205a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16290, 438, 287, 6, 71, "Subsubsection",ExpressionUUID->"5c4d2282-975a-4a7b-8033-b808ba60ce21"],
Cell[16580, 446, 2245, 58, 289, "Input",ExpressionUUID->"35f9e1d3-edf6-48dc-94e4-81fa5ebd53c7"],
Cell[CellGroupData[{
Cell[18850, 508, 1217, 33, 73, "Input",ExpressionUUID->"17344b2f-15ba-473c-8045-2cbb0518470a"],
Cell[CellGroupData[{
Cell[20092, 545, 232, 5, 24, "Print",ExpressionUUID->"93056ffe-7ac7-4a08-ab75-fb2a71885210"],
Cell[20327, 552, 253, 6, 24, "Print",ExpressionUUID->"7fcc9ddb-6547-4a66-b397-5e69dc5ed423"],
Cell[20583, 560, 253, 6, 24, "Print",ExpressionUUID->"906297bb-9d1d-4e64-aad4-207a7a7a17ee"],
Cell[20839, 568, 232, 5, 24, "Print",ExpressionUUID->"7534bb13-8345-4c64-a961-987a35d3d565"],
Cell[21074, 575, 230, 5, 24, "Print",ExpressionUUID->"0663499f-cd47-483f-a756-47dd2ac35458"],
Cell[21307, 582, 232, 5, 24, "Print",ExpressionUUID->"be9f2183-f24f-46a7-8cbc-1aee7130efa5"]
}, Open  ]],
Cell[21554, 590, 205, 3, 57, "Output",ExpressionUUID->"d1b9f619-922b-4654-98bc-40e75f3e406a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

